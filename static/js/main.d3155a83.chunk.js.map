{"version":3,"sources":["index.js"],"names":["CloudForm","props","handleChange","event","setState","target","name","value","handleSubmit","a","mainInput","preventDefault","fetch","headers","credentials","method","body","JSON","stringify","text","state","text_to_generate","then","response","data","json","console","log","predictions","receivedMessage","finaloutput","catch","error","onSubmit","this","id","class","ref","onChange","rows","type","React","Component","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAKMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,aAAe,SAACC,GACd,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAVjC,EAanBC,aAbmB,uCAaJ,WAAOL,GAAP,SAAAM,EAAA,6DAGb,EAAKC,UAAUH,MAAQ,aACvBJ,EAAMQ,iBAJO,SAMPC,MAAM,2EAA4E,CACtFC,QAAS,CACP,eAAgB,oBAElBC,YAAa,cACbC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,KAAM,EAAKC,MAAMC,qBACvCC,MAAM,SAAAC,GACL,IAAMC,EAAOD,EAASE,OACtBC,QAAQC,IAAI,SAAUH,EAAKI,aAC3BF,QAAQC,IAAI,QAASH,EAAI,aACzB,EAAKpB,SAAS,CAAEyB,gBAAiBL,EAAKI,cACtC,IAAME,EAAc,EAAKV,MAAMC,iBAAmB,aAAe,EAAKD,MAAMS,gBAC5E,EAAKnB,UAAUH,MAAQuB,KACtBC,OAAM,SAACC,GACT,EAAKtB,UAAUH,MAAQ,mlBArBb,2CAbI,sDAEjB,EAAKa,MAAQ,CACXC,iBAAkB,KAClBQ,gBAAiB,WAEnB,EAAKnB,UAAY,GANA,E,0CAsCnB,WAAU,IAAD,OACP,OACE,uBAAMuB,SAAUC,KAAK1B,aAAc2B,GAAG,WAAWC,MAAM,+BAAvD,UACE,8BACE,mBAAGA,MAAM,cAAT,SAAuB,+GAEzB,qBAAKA,MAAM,MAAX,SACE,0BACEC,IAAK,SAACA,GAAD,OAAS,EAAK3B,UAAY2B,GAC/B9B,MAAO2B,KAAKd,MAAMb,MAClBD,KAAK,mBACLgC,SAAUJ,KAAKhC,aACfqC,KAAK,KACLH,MAAM,kBAKV,qBAAKA,MAAM,MAAX,SACE,uBAAOI,KAAK,SAASjC,MAAM,yDAAY6B,MAAM,6B,GA1D/BK,IAAMC,WAmExBC,E,kDACJ,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,8KAFI,E,0CAKnB,WACE,OACE,qBAAKwB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAEE,cAAC5C,EAAD,Y,GAXQyC,IAAMC,WAqBxBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEFK,SAASC,eAAe,U","file":"static/js/main.d3155a83.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass CloudForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text_to_generate: null,\n      receivedMessage: \"Loading\"\n    };\n    this.mainInput = {};\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit = async (event) => {\n    // console.log(\"Text prompt: \", {\"text\": JSON.stringify(this.state.text_to_generate)});\n\n    this.mainInput.value = \"Loading...\";\n    event.preventDefault();\n\n    await fetch('https://api.aicloud.sbercloud.ru/public/v1/public_inference/gpt3/predict', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"same-origin\",\n      method: 'POST',\n      body: JSON.stringify({ text: this.state.text_to_generate }),\n    }).then( response => {\n        const data = response.json();\n        console.log(\"Smth: \", data.predictions);\n        console.log(\"res: \", data[\"predictions\"]);\n        this.setState({ receivedMessage: data.predictions });\n        const finaloutput = this.state.text_to_generate + \"\\nRuGPT3: \" + this.state.receivedMessage;\n        this.mainInput.value = finaloutput;\n      }).catch((error) => {\n       this.mainInput.value = \"К сожалению, не удалось обработать ваш запрос из-за за высокой нагрузки. Приносим свои извинения. Попробуйте позже\";\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} id=\"demoform\" class=\"w-100 justify-content-center\">\n        <div>\n          <p class=\"text-center\"><b>Введите текст:</b></p>\n        </div>\n        <div class=\"row\">\n          <textarea\n            ref={(ref) => this.mainInput = ref}\n            value={this.state.value}\n            name=\"text_to_generate\"\n            onChange={this.handleChange}\n            rows=\"15\"\n            class=\"textareacls\"\n          >\n          </textarea>\n        </div>\n\n        <div class=\"row\">\n          <input type=\"submit\" value=\"Дополнить\" class=\"btn btn-success\" />\n        </div>\n      </form>\n    );\n  }\n\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = \"На словах ты Лев Толстой, а на деле \";\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          <CloudForm />\n\n        </header>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}